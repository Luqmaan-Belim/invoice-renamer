name: Drive Watch Renew

on:
  schedule:
    - cron: "0 2 * * *"   # daily
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  renew:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install google-api-python-client google-auth google-auth-httplib2
      - name: Register Drive watch channel
        env:
          GDRIVE_SA_JSON: ${{ secrets.GDRIVE_SA_JSON }}
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          python - <<'PY'
          import os, json, uuid
          from googleapiclient.discovery import build
          from google.oauth2 import service_account

          SA = json.loads(os.environ["GDRIVE_SA_JSON"])
          FOLDER = os.environ["GDRIVE_FOLDER_ID"].strip()
          HOOK = os.environ["WEBHOOK_URL"].strip()
          creds = service_account.Credentials.from_service_account_info(SA, scopes=["https://www.googleapis.com/auth/drive"])
          d = build("drive","v3",credentials=creds,cache_discovery=False)

          meta = d.files().get(fileId=FOLDER, fields="id,name,mimeType,driveId,shortcutDetails", supportsAllDrives=True).execute()
          if meta.get("mimeType") == "application/vnd.google-apps.shortcut":
            tgt = meta["shortcutDetails"]["targetId"]
            meta = d.files().get(fileId=tgt, fields="id,name,mimeType,driveId", supportsAllDrives=True).execute()
          drive_id = meta.get("driveId")

          if drive_id:
            tok = d.changes().getStartPageToken(driveId=drive_id, supportsAllDrives=True).execute()["startPageToken"]
            body = {"id": str(uuid.uuid4()), "type": "web_hook", "address": HOOK}
            resp = d.changes().watch(pageToken=tok, body=body, driveId=drive_id, supportsAllDrives=True).execute()
          else:
            tok = d.changes().getStartPageToken().execute()["startPageToken"]
            body = {"id": str(uuid.uuid4()), "type": "web_hook", "address": HOOK}
            resp = d.changes().watch(pageToken=tok, body=body).execute()

          print("Watch created:", resp)
          PY
